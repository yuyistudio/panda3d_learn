//Cg

void vshader(
    float4 vtx_position : POSITION,
    float2 vtx_texcoord0 : TEXCOORD0,
    out float4 l_position : POSITION,
    out float2 l_texcoord0 : TEXCOORD0,
    uniform float4 texpad_tex,
    uniform float4x4 mat_modelproj)
{
    l_position=mul(mat_modelproj, vtx_position);
    l_texcoord0 = vtx_position.xz * texpad_tex.xy + texpad_tex.xy;
}

void fshader(float2 l_texcoord0 : TEXCOORD0,
             out float4 o_color : COLOR,
             uniform sampler2D k_tex : TEXUNIT0)
{
    float4 c1, c2, c3, c4, c;
    float scale = 0.005;
    for (int i = -3; i <= 3; i++){
    for (int j = -3; j <= 3; j++){
        c += tex2D(k_tex, l_texcoord0 + float2(i, j));
    }}
    c = tex2D(k_tex, l_texcoord0) * 0.6 + c * 0.4 / 9.0;

    // To have a useless filter that outputs the original view
    // without changing anything, just use :
    o_color  = c;
}